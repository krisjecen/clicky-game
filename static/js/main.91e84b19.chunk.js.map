{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","userPlay","id","shuffle","alt","name","src","image","Wrapper","children","clickArray","App","state","friends","clicked","score","topScore","gameStatus","array","temporaryValue","randomIndex","currentIndex","_this","length","Math","floor","random","includes","push","setState","_this2","this","components_Wrapper","map","friend","components_FriendCard","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+kFAYeA,MATf,SAAqBC,GACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKE,QAAS,WAAQL,EAAMM,SAASN,EAAMO,IAAKP,EAAMQ,WAAaJ,UAAU,iBAC3EH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,iBCA1BC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,kBCKrCC,SAAa,IAwFFC,6MArFbC,MAAQ,CACNC,UACAC,QAAS,GACTC,MAAO,EACPC,SAAU,EACVC,WAAY,uCAGdd,QAAU,SAACe,GAMV,IAJC,IACGC,EAAgBC,EADfC,GADJH,EAAQI,EAAKV,MAAMC,SACMU,OAInB,IAAMF,GAEZD,EAAcI,KAAKC,MAAMD,KAAKE,SAAWL,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGtB,OAAOD,KAGRjB,SAAW,SAAAC,GAGJQ,EAAWiB,SAASzB,IAAOoB,EAAKV,MAAMG,QAAUO,EAAKV,MAAMI,UAapDN,EAAWiB,SAASzB,IAAOoB,EAAKV,MAAMG,MAAQO,EAAKV,MAAMI,UAKjEN,EAAWkB,KAAK1B,GAChBoB,EAAKO,SAAU,CACbf,QAASJ,EACTK,MAAOO,EAAKV,MAAMG,MAAQ,EAC1BE,WAAY,4BAMhBP,EAAa,GACbY,EAAKO,SAAU,CAAEf,QAASJ,EAAYK,MAAO,EAAGE,WAAY,8DA3B5DP,EAAWkB,KAAK1B,GAIhBoB,EAAKO,SAAU,CACbf,QAASJ,EACTK,MAAOO,EAAKV,MAAMG,MAAQ,EAC1BC,SAAUM,EAAKV,MAAMI,SAAW,EAChCC,WAAY,oGAwBT,IAAAa,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASgC,KAAKnB,MAAMK,WAAlC,0CACArB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eAAmCgC,KAAKnB,MAAMG,MAA9C,iBAAmEgB,KAAKnB,MAAMI,UAC7Ee,KAAKnB,MAAMC,QAAQoB,IAAI,SAAAC,GAAM,OAC5BtC,EAAAC,EAAAC,cAACqC,EAAD,CACEhC,QAAS2B,EAAK3B,QACdF,SAAU6B,EAAK7B,SACfC,GAAIgC,EAAOhC,GACXkC,IAAKF,EAAOhC,GACZK,MAAO2B,EAAO3B,kBA9ER8B,IAAMC,iBCNxBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.91e84b19.chunk.js","sourcesContent":["import React from 'react'\nimport './style.css'\n\nfunction FriendCard (props) {\n  return (\n    <div className='card'>\n      <div onClick={() => { props.userPlay(props.id); props.shuffle() }} className='img-container'>\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  )\n}\nexport default FriendCard\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from 'react'\nimport FriendCard from './components/FriendCard'\nimport Wrapper from './components/Wrapper'\nimport friends from './friends.json'\nimport './App.css'\n/* i tried to make the code drier by updating the clicked state array using setState\nbut i encountered an error when i used the .push method directly saying that \nthis.state.clicked.push(id) was not a function, so i made another array i could push to.\n*/\nvar clickArray = []\n\nclass App extends React.Component {\n  state = {\n    friends,\n    clicked: [],\n    score: 0,\n    topScore: 0,\n    gameStatus: 'Click any picture below to begin!'\n  }  \n\n  shuffle = (array) => {\n    array = this.state.friends\n    var currentIndex = array.length;\n\t  var temporaryValue, randomIndex;\n\n\t  // While there remain elements to shuffle...\n\t  while (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\t  randomIndex = Math.floor(Math.random() * currentIndex);\n\t\t  currentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\t  temporaryValue = array[currentIndex];\n\t\t  array[currentIndex] = array[randomIndex];\n\t\t  array[randomIndex] = temporaryValue;\n\t  }\n\n\t  return array;\n  }\n\n  userPlay = id => {\n    // if the user's play has not already been clicked\n    // and the current score is the same as the top score...\n    if (!clickArray.includes(id) && this.state.score === this.state.topScore) {\n      // ...add the id of the play to the array\n      clickArray.push(id)\n      // shuffle the array\n\n      // ...increment both scores by one\n      this.setState( { \n        clicked: clickArray, \n        score: this.state.score + 1, \n        topScore: this.state.topScore + 1,\n        gameStatus: 'Good job, keep going!'\n       })\n    } // if the current score is less than the top score\n      else if (!clickArray.includes(id) && this.state.score < this.state.topScore) {\n        /* do everything above but don't increment the top score.\n        i tried to make this code drier by setting the topScore equal to the score, but the scores\n        didn't update simultaneously; the top score stayed one behind the current score.\n        */\n        clickArray.push(id)\n        this.setState( { \n          clicked: clickArray, \n          score: this.state.score + 1,\n          gameStatus: 'Good job, keep going!'\n        }) \n    } else {\n      /* if the id is already in the array, the player loses and gets a loss message, the score resets,\n      and the clicked array gets emptied\n      */\n      clickArray = []\n      this.setState( { clicked: clickArray, score: 0, gameStatus: 'Oops, you lost. Click a picture to start playing again!' })\n    }\n\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <h1 className='title'>Clicky Game</h1>\n        <h2 className='title'>{this.state.gameStatus} | Don't click the same picture twice!</h2>\n        <h2 className='title'>Your score: {this.state.score} | Top score: {this.state.topScore}</h2>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffle={this.shuffle}\n            userPlay={this.userPlay}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}